SHELL=/bin/sh
VENDOR=gcc

#--------------------------------------------------------------------
#    Root directories for external software... generally
#    below these directories will be include, lib, bin
#--------------------------------------------------------------------
MPI_ROOT= /usr/local
NETCDF_ROOT= /usr/local
FFTW3_ROOT= /usr/local

#--------------------------------------------------------------------
#    Run and output base directory locations
#--------------------------------------------------------------------
BASE=${PWD}

#--------------------------------------------------------------------
#    Compiler wrappers for MPI
#--------------------------------------------------------------------
F77 = ${MPI_ROOT}/bin/mpif77
F90 = ${MPI_ROOT}/bin/mpif90 
FLINKER = ${F90}
 
#--------------------------------------------------------------------
#    Vendor specific compilation parameters
#   -O2 and -O3 behave about the same on my mac w/ np=2
#     -fbounds-check
#--------------------------------------------------------------------

ifeq ($(VENDOR), gcc)  
	LDFLAGS =	   
	#FOPTFLAGS   = -g -O0  -cpp -ffree-form -ffree-line-length-none -ffpe-trap=zero,overflow,underflow
	FOPTFLAGS   = -g -O3 -ffast-math -cpp -ffree-form -ffree-line-length-none 
	F77OPTFLAGS = -g -O3 -ffast-math -cpp -ffixed-form -ffixed-line-length-none 
	#BLAS_LIB = -framework VecLib
	BLAS_LIB = -lblas
endif


ifeq ($(VENDOR), portland)
	LDFLAGS = 
	FOPTFLAGS   = -Mpreprocess -g -O2 -Mvect=sse -tp p7-64 -Mextend
	F77OPTFLAGS = -Mpreprocess -g -O2 -Mvect=sse -tp p7-64 -Mextend
	BLAS_LIB	= -L/opt/pgi/osx86-64/7.0/lib -lblas
endif

XTRA_LIBS =			#  in case you need something special on your machine
LD_LIBRARY_PATH =	# only search for explicitly indicated libraries
DYLD_LIBRARY_PATH =	# only search for explicitly indicated libraries


#--------------------------------------------------------------------
#  include and link flags...
#   note: I assume standard include and lib locations beneath main dir
#         some systems have both lib and lib64
#         sometimes netcdf needs links to 2 libraries, don't know why
#         this is so variable accross netcdf builds
#--------------------------------------------------------------------  
NETCDF_INC=	-I${NETCDF_ROOT}/include
NETCDF_LIB=	-L${NETCDF_ROOT}/lib -lnetcdf

ifeq ($(VENDOR), gcc)
	NETCDF_LIB=	-L${NETCDF_ROOT}/lib -lnetcdff -lnetcdf
endif

FFTW_INC=	    -I${FFTW3_ROOT}/include
FFTW_LIB=	    -L${FFTW3_ROOT}/lib -lfftw3

ALL_EXTERNAL_LIBS =	$(NETCDF_LIB) $(FFTW_LIB) $(BLAS_LIB) $(XTRA_LIBS) 					
ALL_INCLUDES =  $(NETCDF_INC) $(FFTW_INC)	

 
showconfig:
	@echo
	-@echo  "--------------------------------------------------------------------------------------" 
	-@echo  "host:                 " `hostname -s`
	-@echo  "OS:                   " `uname -sr`
	-@echo  "user:                 " `whoami`
	-@echo  "compile date:         " `date -u +"%Y-%m-%dT%H:%M:%SZ"`
	-@echo  "SHELL:                " ${SHELL}
	-@echo  "VENDOR:               " ${VENDOR}
	-@echo  "LD_LIBRARY_PATH:      " ${LD_LIBRARY_PATH}
	-@echo  "DYLD_LIBRARY_PATH:    " ${DYLD_LIBRARY_PATH}
	-@echo  "BASE:                 " ${BASE}
	-@echo  "OUTPUT_ROOT:          " ${BASE}/output
	-@echo  "F90:                  " ${F90}
	-@echo  "F77:                  " ${F77}
	-@echo  "FOPTFLAGS:            " ${FOPTFLAGS}
	-@echo  "F77OPTFLAGS:          " ${F77OPTFLAGS}
	-@echo  "FLINKER:              " ${FLINKER}
	-@echo  "NETCDF_INC:           " ${NETCDF_INC}
	-@echo  "NETCDF_LIB:           " ${NETCDF_LIB}
	-@echo  "FFTW_INC:             " ${FFTW_INC}
	-@echo  "FFTW_LIB:             " ${FFTW_LIB}
	-@echo  "BLAS_LIB:             " ${BLAS_LIB}
	-@echo  "ALL_EXTERNAL_LIBS:    " ${ALL_EXTERNAL_LIBS}
	-@echo  "ALL_INCLUDES:         " ${ALL_INCLUDES}
	-@echo  "XTRA_LIBS:            " ${XTRA_LIBS}
	-@echo  "--------------------------------------------------------------------------------------" 
