#!/bin/bash
#
#SBATCH -J run_1_3d                 # job name
#SBATCH -o msgs%j                   # output and error file name (%j expands to jobID)
#SBATCH --nodes=3                   # total number of NODES  (24 cores/node)
#SBATCH --ntasks-per-node=24        # total number of mpi tasks requested
#SBATCH --partition=compute         # queue (partition) -- compute,
#SBATCH --export=ALL
#SBATCH -t 168:00:00                # run time (hh:mm:ss)  168hrs=1week
#SBATCH --mail-user=kraig@coast.ucsd.edu
#SBATCH --mail-type=begin           # email me when the job starts
#SBATCH --mail-type=end             # email me when the job finishes
#SBATCH --qos=oneweek
#-----------------------------------------------------------------------------------------------
# Kraig,
# I have enabled you for long runs on Comet. You can add the following line to your script:
#        #SBATCH --qos=oneweek
# and then just request the longer run time. 
# Let me know if there are any issues with requesting this longer time.
#  -Mahidhar
#-----------------------------------------------------------------------------------------------

date
#------------------------------------------------------------------------
# env variables for my /oasis/projects and /oasis/scratch areas
#------------------------------------------------------------------------
export PROJECTS=/oasis/projects/nsf/sio105/$USER
export SCRATCH=/oasis/scratch/comet/$USER/temp_project

#------------------------------------------------------------------------
# load modules needed for compilation
#------------------------------------------------------------------------
module load netcdf fftw atlas


#------------------------------------------------------------------------
#  cd to the run directory on the lustre filesystem for this run
#    $PROJECTS      no backups, not purged, quota
#    $SCRATCH       no backups,  maybe PURGED after 10 days,  much larger
#------------------------------------------------------------------------
export RUNDIR=$PROJECTS/Oscillating/run_1_3d
mkdir $RUNDIR  

#------------------------------------------------------------------------
# compile and create output directories in my $HOME directory
#------------------------------------------------------------------------
cd $HOME/flow_solve/flow_solve_GIT_REPOSITORY
make clean
make flow.x
make outdirs

#------------------------------------------------------------------------
# MOVE flow.x and the RESTART and output directories to the run directory
# COPY the (symbolically linked) input directory to the run directory
#------------------------------------------------------------------------
mv flow.x $RUNDIR/.
mv output $RUNDIR/.
cp -rH input $RUNDIR/.
cp -f run.sh Make.inc Makefile $RUNDIR/.
cp -r RESTART $RUNDIR/input/.


cd $RUNDIR


#--------------------------------------------------------------------------
# run the simulation, NB no specification of the number of  processes here
#--------------------------------------------------------------------------
ibrun ./flow.x >& runlog         # run the MPI executable named flow.x
date >> runlog
date
